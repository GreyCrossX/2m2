"""credentials and bot

Revision ID: 1579a3e405b4
Revises: 53e1675bb201
Create Date: 2025-09-05 19:28:20.832231

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1579a3e405b4'
down_revision: Union[str, Sequence[str], None] = '53e1675bb201'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_pw', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('suscription', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email'))
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('api_credentials',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('env', sa.Enum('testnet', 'prod', name='env_enum'), server_default='testnet', nullable=False),
    sa.Column('api_key_encrypted', sa.String(length=1024), nullable=False),
    sa.Column('api_secret_encrypted', sa.String(length=1024), nullable=False),
    sa.Column('label', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_api_credentials_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_api_credentials'))
    )
    op.create_index(op.f('ix_api_credentials_user_id'), 'api_credentials', ['user_id'], unique=False)
    op.create_index('uq_cred_owner_scope', 'api_credentials', ['user_id', 'env', 'label'], unique=True)
    op.create_table('bots',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('cred_id', sa.UUID(), nullable=True),
    sa.Column('symbol', sa.String(length=32), nullable=False),
    sa.Column('timeframe', sa.String(length=8), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('env', sa.Enum('testnet', 'prod', name='env_enum'), server_default='testnet', nullable=False),
    sa.Column('side_whitelist', sa.Enum('long', 'short', 'both', name='side_whitelist_enum'), server_default='both', nullable=False),
    sa.Column('leverage', sa.Integer(), nullable=False),
    sa.Column('use_balance_pct', sa.Boolean(), nullable=False),
    sa.Column('balance_pct', sa.Numeric(precision=6, scale=4), server_default='0.0500', nullable=False),
    sa.Column('fixed_notional', sa.Numeric(precision=18, scale=4), server_default='0.0000', nullable=False),
    sa.Column('max_position_usdt', sa.Numeric(precision=18, scale=4), server_default='0.0000', nullable=False),
    sa.Column('nickname', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['cred_id'], ['api_credentials.id'], name=op.f('fk_bots_cred_id_api_credentials'), ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_bots_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_bots'))
    )
    op.create_index(op.f('ix_bots_cred_id'), 'bots', ['cred_id'], unique=False)
    op.create_index(op.f('ix_bots_symbol'), 'bots', ['symbol'], unique=False)
    op.create_index('ix_bots_symbol_enabled', 'bots', ['symbol', 'enabled'], unique=False)
    op.create_index('ix_bots_user_enabled', 'bots', ['user_id', 'enabled'], unique=False)
    op.create_index(op.f('ix_bots_user_id'), 'bots', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_bots_user_id'), table_name='bots')
    op.drop_index('ix_bots_user_enabled', table_name='bots')
    op.drop_index('ix_bots_symbol_enabled', table_name='bots')
    op.drop_index(op.f('ix_bots_symbol'), table_name='bots')
    op.drop_index(op.f('ix_bots_cred_id'), table_name='bots')
    op.drop_table('bots')
    op.drop_index('uq_cred_owner_scope', table_name='api_credentials')
    op.drop_index(op.f('ix_api_credentials_user_id'), table_name='api_credentials')
    op.drop_table('api_credentials')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
